<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data &amp; Science on Data &amp; Science</title>
    <link>https://gregoirejan.github.io/</link>
    <description>Recent content in Data &amp; Science on Data &amp; Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Predictive maintenance of bicycles</title>
      <link>https://gregoirejan.github.io/project/maintenancebike/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gregoirejan.github.io/project/maintenancebike/</guid>
      <description>

&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;

&lt;p&gt;In recent years bicycle sharing has become more and more present in Oslo. It provides an alternative to other modes of transport as well as filling the gaps left by public transports. They are many benefits provided by bicycle sharing: times of commuting trips can be potentially reduced, no bicycle theft, health improvement&amp;hellip;&lt;/p&gt;

&lt;p&gt;The main objective of this project is to successfully flag the call for maintenance of a bike. The benefits of such prediction would be obvious for the maintenance teams and thus for bike sharing users.You can find all the R code used for this work &lt;a href=&#34;https://&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This project is organized as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Data analysis

&lt;ul&gt;
&lt;li&gt;Maintenance log&lt;/li&gt;
&lt;li&gt;Bike trips log&lt;/li&gt;
&lt;li&gt;Merging&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Prediction

&lt;ul&gt;
&lt;li&gt;Features&lt;/li&gt;
&lt;li&gt;Random Forest&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;data-analysis&#34;&gt;Data analysis&lt;/h1&gt;

&lt;h2 id=&#34;maintenance-log&#34;&gt;Maintenance Log&lt;/h2&gt;

&lt;p&gt;In order to make a prediction on the maintenance we need to know when the bikes get broken. To do this we have a maintance log which contains all the repairs for the year 2017.
This file contains every single type of repair done on a bike. Since we are only interested in knowing that the bike was repaired and when it was done we can simply aggregate the dataset per &lt;em&gt;bike ID&lt;/em&gt; and &lt;em&gt;date&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s be curious at first and check what type of repair is most common. The bar plot shows that we have 3 groups that seems to create most of the repair: chains, breaks and gears.
&lt;img src=&#34;repair.png&#34; alt=&#34;&#34; title=&#34;Frequency per day&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s have a look now at the aggregated data per month, weekday and hour to see if we can spot any patterns.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The bar plot of the frequency per month shows that data starts in April (that is the start of the bike sharing season in Oslo) and ends in Septembre (end of provided file). The mean for a month is ~142 repairs. April and August look a bit busier.
&lt;img src=&#34;freqmounth.png&#34; alt=&#34;&#34; title=&#34;Frequency per month&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The bar plot of the frequency per weekday shows that weekends seems quieter and that Thursday is the busiest day. We can wonder if weekends are quieter due to low repair staff avaibility. However we would expect Mondays to be much busier in such case. The mean for a day is at ~8 repairs.
&lt;img src=&#34;freqwday.png&#34; alt=&#34;&#34; title=&#34;Frequency per weekday&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The bar plot of the frequency per hour show that mornings are much busier than afternoon. One can think that is due to the bikes being broken late at night the day before.
&lt;img src=&#34;freqhour.png&#34; alt=&#34;&#34; title=&#34;Frequency per hour&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bike-trips-log&#34;&gt;Bike trips log&lt;/h2&gt;

&lt;p&gt;The bike trips log represents all the trips from April to September 2017. This dataset contains a &lt;em&gt;bike id&lt;/em&gt; for each &lt;em&gt;trip id&lt;/em&gt; as well as the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Birth year and gender of the user&lt;/li&gt;
&lt;li&gt;Localisation and number of locks of the start and end station&lt;/li&gt;
&lt;li&gt;Time of the start and end of the trip&lt;/li&gt;
&lt;li&gt;Trip duration&lt;/li&gt;
&lt;/ul&gt;

&lt;!--
trip_id, bike_id, start_station_id, end_station_id, trip_started_at, trip_ended_at, trip_duration, member_birth_year, member_gender, start_station_title, start_station_subtitle, start_station_number_of_locks, 
start_station_latitude, start_station_longitude, end_station_title, end_station_subtitle, end_station_number_of_locks, end_station_latitude, end_station_longitude)
--&gt;

&lt;h2 id=&#34;merging&#34;&gt;Merging&lt;/h2&gt;

&lt;p&gt;Before we can merge the bike trips and the maintance log together we have to make an assumption: the last trip before repair time has caused the bike to break. There are some limitations to this assumption since the bike could have been broken on some trips before (but not reported) or simply broken on the deck. But I believe we could assume that our assumption is correct most of time.&lt;/p&gt;

&lt;p&gt;So first we split the end time of each trip into month, day and hour and weekday for the bike trips log.
Then the dataset is sorted per &lt;em&gt;bike id&lt;/em&gt; per end time before copying the trip start time of the next trip.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Sort the data per bike_id and trip end time
tripsdt &amp;lt;- as.data.table(trips[order(trips$bike_id,trips$trip_ended_at),])
# Copy the trip start time of the next trip 
tripsdt[ , next_trip := shift(trip_started_at,type=&amp;quot;lead&amp;quot;)]
tripsdt &amp;lt;- tripsdt[, c(1:6,28,7:27)]
# NA value when the bike id changes
tripsdt &amp;lt;- tripsdt %&amp;gt;% 
  group_by(bike_id) %&amp;gt;% 
  mutate(next_trip= ifelse(row_number()==n(), NA, next_trip))
tripsdt$numnext &amp;lt;-tripsdt$next_trip
# Convert time to POSIX
tripsdt$next_trip &amp;lt;- as.POSIXct(tripsdt$next_trip, origin=&amp;quot;1970-01-01&amp;quot;,tz=&amp;quot;UTC&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we are ready to merge both logs together using the assumption mentionned earlier. I used SQL to simplify the task!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;### Merge maintenance and bike trip log using SQL
library(sqldf)

# The merge is done assuming that the last trip before the time of repair has caused the bike to break
mge &amp;lt;- sqldf(&amp;quot;
  SELECT *
  FROM tripsdt t LEFT JOIN agg a
  ON t.bike_id = a.bike_id
  AND a.ndate BETWEEN t.numend AND t.numnext
&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok so now we have flagged which trip broke a bike: 1 for broken - 0 otherwise. Then I have performed some cleaning before the next steps: removing rows with NAs for gender or birth year and birth years outside the range 1947-2001 (users must be 16 to have an account).&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s analysis who,where and when the bicycles are being broken:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Gender: the bar plot below does not show any clear distinction between females and males where the percentage of broken bicycles varies around 0.3%. The other category is not relevant here  since it contains ony 11 cases.
&lt;img src=&#34;brokegender.png&#34; alt=&#34;&#34; title=&#34;Percentage of broken bicycles per gender&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Age: the bar plot below shows that the older the user the bigger the percentage of broken bicycles.
&lt;img src=&#34;brokeage.png&#34; alt=&#34;&#34; title=&#34;Percentage of broken bicycles per age decade&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;End stations: the map below does not show any clear areas where the percentage of broken bicycles would have been higher.
&lt;img src=&#34;brokemap.png&#34; alt=&#34;&#34; title=&#34;Percentage of broken bicycles per end station&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Time: the bar plots below show that early mornings, the months of April and August as well as Thrusdays have higher percentages.
&lt;img src=&#34;broketime.png&#34; alt=&#34;&#34; title=&#34;Percentage of broken bicycles per hour/weekday/month&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before moving forward we will have a look at the correlation between our &amp;ldquo;broke&amp;rdquo; flag and the other numerical features:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;bike_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;end_station_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;trip_duration&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;member_birth_year&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;broke&lt;/th&gt;
&lt;th&gt;cumduration&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0.001222964&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.001560858&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.003753742&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-0.002532061&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.000000000&lt;/td&gt;
&lt;td&gt;-0.010912075&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We can see that none of the numerical features have a high correlation with the flag.&lt;/p&gt;

&lt;h1 id=&#34;prediction&#34;&gt;Prediction&lt;/h1&gt;

&lt;h2 id=&#34;additionnal-features&#34;&gt;Additionnal features&lt;/h2&gt;

&lt;p&gt;The next step is to compute some additionnal features:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Flag is TRUE on first trip after reparir - otherwise false
mgena$flag &amp;lt;- c(FALSE,diff(mgena$broke) &amp;lt; 0 | diff(mgena$bike_id) != 0)
# Flag: 0 if bike does not break - 1 if bike breaks at some point
mgena$brokemax &amp;lt;- with(mgena, ave(broke, cumsum(flag == TRUE), FUN = max))
# Cumulative duration until a bike breaks
mgena$cumduration &amp;lt;- with(mgena, ave(trip_duration, cumsum(flag == TRUE), FUN = cumsum))
# Index of trips for each bike until it breaks - set back to 1
mgena$groupindex &amp;lt;- with(mgena, ave(bike_id, cumsum(flag == TRUE), FUN = seq_along))
# Maximum number of trips for each bike until it breaks
mgena$groupmax &amp;lt;- with(mgena, ave(groupindex, cumsum(flag == TRUE), FUN = max))
# Percentage brokne = how much the bike is broken / 100% when broke
mgena$percm &amp;lt;- mgena$groupindex/mgena$groupmax
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;cumulative trip duration&lt;/em&gt;: cumulative sum of the &lt;em&gt;trip duration&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;group index&lt;/em&gt;: index within each group&lt;/li&gt;
&lt;li&gt;&lt;em&gt;group index max&lt;/em&gt;: maximum index for each group&lt;/li&gt;
&lt;li&gt;&lt;em&gt;group broke flag&lt;/em&gt;: maximum flag value for each group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A group here is a sub-group of &lt;em&gt;bike id&lt;/em&gt; where the boundaries are defined by the first trip after its repair until the next trip where it breaks, i.e. every trips for a given bike until it breaks.&lt;/p&gt;

&lt;p&gt;Finally we can compute a last feature that defines how &amp;ldquo;broken&amp;rdquo; is the bicycle by dividing the &lt;em&gt;group index&lt;/em&gt; by &lt;em&gt;group max&lt;/em&gt;. And now we have the outcome we want to predict! We will call it &lt;em&gt;percentage broken&lt;/em&gt;.It is fair to say here that we have made another assumption which is that the bicycles are getting broken in a linear way.&lt;/p&gt;

&lt;h2 id=&#34;random-forest&#34;&gt;Random Forest&lt;/h2&gt;

&lt;p&gt;First we only want to keep that bikes group that have been broken (we use our &lt;em&gt;group index max&lt;/em&gt; for this purpose). Then we retain the following features only:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bike id&lt;/li&gt;
&lt;li&gt;End station id&lt;/li&gt;
&lt;li&gt;Trip duration&lt;/li&gt;
&lt;li&gt;Member birthyear&lt;/li&gt;
&lt;li&gt;Member gender&lt;/li&gt;
&lt;li&gt;Date: mount, hour and weekday&lt;/li&gt;
&lt;li&gt;Cummulative duration&lt;/li&gt;
&lt;li&gt;Percentage borken (our outcome)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we can split our data into a training (70% of the trips) and testing dataset (30% of the trips).&lt;/p&gt;

&lt;p&gt;We are now ready to train our model!
&lt;em&gt;Ranger&lt;/em&gt; is a fast implementation of random forests (Breiman 2001) or recursive partitioning.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Random Forest - Ranger from CARET
fitrfm&amp;lt;- train(percm ~ .,data=trainingr,
                     method = &amp;quot;ranger&amp;quot;,
                     trControl = trainControl(method=&amp;quot;cv&amp;quot;, number = 5, verboseIter = T, classProbs = T),
                     num.trees = 100,
                     importance = &amp;quot;permutation&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before taking a look at the predictions using our trained model let&amp;rsquo;s see the importance of the features:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Features&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Weights&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;cumduration&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.000e+02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;bike_id&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5.002e+01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;monthAug&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.673e+01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;monthJul&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.716e+01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;monthMay&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.386e+01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;monthJun&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.056e+01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;monthSep&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8.242e+00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;monthApr&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.549e+00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;wdayThursday&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8.692e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;wdayWednesday&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;6.368e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;wdayFriday&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;6.069e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;hour&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5.494e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;wdaySaturday&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.309e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;wdayTuesday&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.056e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;wdayMonday&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3.260e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;trip_duration&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.644e-01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;end_station_id&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;6.339e-02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;member_birth_year&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.544e-02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;member_genderother&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1.038e-02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;member_gendermale&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9.616e-03&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This is not surprising to see the cumulative duration as the top factor for the decision tree. However the &lt;em&gt;month&lt;/em&gt; seems to have a great impact as well and we could wonder if this is justified. The dataset we use contains only bicycles trips from 2017. One can wonder if the &lt;em&gt;month&lt;/em&gt; feature is really representative. We would need data from other years to confirm it. We will then train our model another time but without the &lt;em&gt;month&lt;/em&gt; feature this time. Here are the metrics to assess our models after predicting our outcome &lt;em&gt;percentage borken&lt;/em&gt; using the testing dataset:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;R Square&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Root Mean Square Error&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Model 1 (All features)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.93&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;7.8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Model 2 (All features without month)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.81&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;12.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Even though the R square value is decreasing by 12 points it is still a fairly good achievement and so is the Root Mean Square error. As a reminder, a perfect R Square value would be 1 and we want the Root Mean Square error to be as small as possible, e.g. for model 2 we are on average 12.1 points away from the true value.&lt;/p&gt;

&lt;p&gt;We can now visualise our prediction vs the observed value for the model 2 on the testing dataset:
&lt;img src=&#34;obspred.png&#34; alt=&#34;&#34; title=&#34;Oberserved vs Predicted percentage broken values&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can see that most of the prediction falls around the perfect fit line. The prediction seems to be more accurate above the oberserved value of 50% which is in our interest.&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Since we have fairly good accuracy even for the model 2 we could set a flag with a high &lt;em&gt;percentage broken&lt;/em&gt; prediction. If we were to choose a value of 90% using model 2 we would have only missed 1.7% of the broken bikes for the testing dataset.&lt;/p&gt;

&lt;p&gt;Further work could be done to improve the hyper parameters of the model. We could as well challenge our assumption stating that the bicycles get broken in a liner way.&lt;/p&gt;

&lt;p&gt;If you enjoyed this project and/or have any comments please feel free to contact me!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page</title>
      <link>https://gregoirejan.github.io/tutorial/example/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>https://gregoirejan.github.io/tutorial/example/</guid>
      <description>

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bike Sharing stations usage</title>
      <link>https://gregoirejan.github.io/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://gregoirejan.github.io/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Stopping opponent losing streaks</title>
      <link>https://gregoirejan.github.io/project/losingstreaks/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://gregoirejan.github.io/project/losingstreaks/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Academic: the website designer for Hugo</title>
      <link>https://gregoirejan.github.io/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://gregoirejan.github.io/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Academic&lt;/strong&gt; makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.&lt;/p&gt;

&lt;p&gt;Follow our easy &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/&#34; target=&#34;_blank&#34;&gt;step by step guide&lt;/a&gt; to learn how to build your own free website with Academic. &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Check out the personal demo&lt;/a&gt; or the &lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;business demo&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage various content including homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Extensible via &lt;strong&gt;color themes&lt;/strong&gt; and &lt;strong&gt;widgets/plugins&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Multilingual and easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic is available in different color themes and font themes.&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Ocean&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Forest&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Dark&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Apogee&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-apogee.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-apogee.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;1950s&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Coffee theme with Playfair font&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Cupcake&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-cupcake.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-cupcake.png&#34;&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one-click install using your web browser (recommended)&lt;/li&gt;
&lt;li&gt;install on your computer using Git with the Command Prompt/Terminal app&lt;/li&gt;
&lt;li&gt;install on your computer by downloading the ZIP files&lt;/li&gt;
&lt;li&gt;install on your computer with RStudio&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quick-install-using-your-web-browser&#34;&gt;Quick install using your web browser&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34;&gt;Install Academic with Netlify&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Netlify will provide you with a customizable URL to access your new site&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;On GitHub, go to your newly created &lt;code&gt;academic-kickstart&lt;/code&gt; repository and edit &lt;code&gt;config.toml&lt;/code&gt; to personalize your site. Shortly after saving the file, your site will automatically update&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-git&#34;&gt;Install with Git&lt;/h3&gt;

&lt;p&gt;Prerequisites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34;&gt;Download and install Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34; target=&#34;_blank&#34;&gt;Download and install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart#fork-destination-box&#34; target=&#34;_blank&#34;&gt;Fork&lt;/a&gt; the &lt;em&gt;Academic Kickstart&lt;/em&gt; repository and clone your fork with Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sourcethemes/academic-kickstart.git My_Website
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace &lt;code&gt;sourcethemes&lt;/code&gt; with your GitHub username.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize the theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd My_Website
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-zip&#34;&gt;Install with ZIP&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract &lt;em&gt;Academic Kickstart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract the &lt;em&gt;Academic theme&lt;/em&gt; to the &lt;code&gt;themes/academic/&lt;/code&gt; folder from the above step&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-rstudio&#34;&gt;Install with RStudio&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;View the guide to installing Academic with RStudio&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you installed on your computer, view your new website by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now visit &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt; or Netlify (refer to the first installation method). Alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as a university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of updates and check out the &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;release notes&lt;/a&gt; prior to updating your site.&lt;/p&gt;

&lt;p&gt;Before updating the framework, it is recommended to make a backup of your entire website directory (or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory) and record your current version number.&lt;/p&gt;

&lt;p&gt;By default, Academic is installed as a Git submodule which can be updated by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --remote --merge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Check out the update guide&lt;/a&gt; for full instructions and alternative methods.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For support, head over to the &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://gregoirejan.github.io/slides/example-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gregoirejan.github.io/slides/example-slides/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
